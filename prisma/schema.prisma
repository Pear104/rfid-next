generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
  // Test
  url      = env("TEST_DB")
}

model User {
  id        Int      @id @default(autoincrement())
  newField  String
  name      String
  email     String   @unique
  image     String
  createdAt DateTime @default(now())
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Lecturer {
  id        String      @id
  name      String
  ClassInfo ClassInfo[]
}

model Class {
  id        String      @id
  ClassInfo ClassInfo[]
}

model Subject {
  id        String      @id
  name      String
  ClassInfo ClassInfo[]
}

model Student {
  id         String       @id
  uid        String
  name       String
  Attendance Attendance[]
}

model ClassInfo {
  id         Int          @id @default(autoincrement())
  lecturerId String
  classId    String
  subjectId  String
  slotOrder  Int
  lecturer   Lecturer     @relation(fields: [lecturerId], references: [id])
  class      Class        @relation(fields: [classId], references: [id])
  subject    Subject      @relation(fields: [subjectId], references: [id])
  Attendance Attendance[]
}

model Attendance {
  classInfoId Int
  studentId   String
  section     Int
  attendance  AttendStatus @default(FUTURE)
  date        DateTime
  classInfo   ClassInfo    @relation(fields: [classInfoId], references: [id])
  student     Student      @relation(fields: [studentId], references: [id])

  @@unique([classInfoId, studentId, section])
  @@index([classInfoId, studentId, section])
}

enum AttendStatus {
  FUTURE
  PRESENT
  ABSENT
}
